require "Global"
require "ViewManager" 

local class = class()
function class:Start()
	local uiSprite = FindChildInTransform("Sprite", self.transform).gameObject:GetComponent(UISprite)
	self.sprite = uiSprite
	if uiSprite then
		Lua.SetUISprite(uiSprite, "human_footman_6")
	end
	LuaTimer.Add(200,20,function( )
		self:FixedUpdate()
		return true
	end)
	self:initTable(10)
end

function class:initGrids( cell,cellData,cellIdx )
	for i=1,#cellData do
		local grid = self:createGrid()
		if grid then
			grid.transform.parent = cell.transform
			grid.transform.localScale = Vector3.one
			grid.transform.localPosition = Vector3(i*50-150,0,0)
			print("create cellGrid:=============" .. i)
			grid:setNum((cellIdx-1)*5+i)
		end
	end
end

function class:initTable( cellNum, data)
	self.table.transform.localPosition = Vector3(-145,0,0)
	for i=1,cellNum do
		local cell = self:createCell()
		if cell then
			self:initCell(cell,nil,i)
			cell.transform.parent = self.table.transform
			cell.transform.localPosition = Vector3(-150,-i,0)
			cell.transform.localScale = Vector3.one
		end
	end
	self.table:Reposition()
end

function class:initCell( cell,gridData,cellIdx )
	self:initGrids(cell,gridData or {1,2,3,4,5},cellIdx)
end

function class:createGrid( )
	-- local go = Lua.CreateGoFromRes2("myGrid.prefab", Vector3.zero, Quaternion.identity)
	local frame = FindChildInTransform("Frame", self.transform).gameObject
	local go  = CreateUIGo(frame)
	local panel = GetLuaTable(go)
	self:addGridClickFunc(panel)
	return panel
end

function class:addGridClickFunc( grid )
	-- UIEventListener.Get(grid.gameObject).OnGridClick = function ()
	-- 	Object.Destroy(gird)
	-- end
end

function class:closeDetail( noReposition )
	if not self.detailCell then return end
	self.detailCell.grid.detailCell = nil
	Object.Destroy(self.detailCell.gameObject)
	self.detailCell = nil
	if not noReposition then self.table:Reposition() end
end

function class:doShowDetail( detailCell )
	if not detailCell then return print "no detailCell" end
	if self.detailCell then
		self:closeDetail(true)
	end
	self.detailCell = detailCell
	self.table:Reposition()
end

function class:OnGridClick()
	print "66677788"
end

function class:createCell( )
	local frame = FindChildInTransform("Cell", self.transform).gameObject
	local go  = CreateUIGo(frame)
	local cell = GetLuaTable(go)
	-- self:addGridClickFunc(cell)
	return cell
end

local index = 1
local spMap = {
	-- "human_footman_6",
	-- "human_mage_6",
	-- "human_knight_6",
	-- "3_1_run_60001",
}
for i=1,9 do
	table.insert(spMap,"3_1_run_6000" .. i)
end
table.insert(spMap,"3_1_run_600" .. 10)
local frameNum = #spMap
function class:FixedUpdate( )
	index = index%frameNum+1
	Lua.SetUISprite(self.sprite, spMap[index])
end

return class